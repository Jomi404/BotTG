import asyncio
import logging
from aiogram.types import Message
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.types import CallbackQuery
from aiogram import types
from aiogram.filters.command import Command
from aiogram import F
from aiogram.utils.keyboard import InlineKeyboardBuilder

from loader import dp, bot
from data.config import EDITORS

import handlers
from aiogram.types import FSInputFile

view_post = '–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ—Å—Ç'
edit_post = '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Å—Ç'
see_post = '–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø–æ—Å—Ç'


@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    kb = [
        [
            types.KeyboardButton(text=view_post),
            types.KeyboardButton(text=edit_post)
        ],
    ]
    keyboard = types.ReplyKeyboardMarkup(
        keyboard=kb,
        resize_keyboard=True,
    )
    await message.answer('''–ü—Ä–∏–≤–µ—Ç! üëã

    ü§ñ –Ø –±–æ—Ç –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é –∫–∞—Ä—Ç–æ—á–µ–∫ —Ç–æ–≤–∞—Ä–æ–≤ –ª—é–±–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.

    üõçÔ∏è –ß—Ç–æ–±—ã –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –≤–æ–∑–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π /commands.

    ‚ùì –í–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã? –ù–µ –ø—Ä–æ–±–ª–µ–º–∞! –ö–æ–º–∞–Ω–¥–∞ /help –ø–æ–º–æ–∂–µ—Ç 
    —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è —Å –±–∞–∑–æ–≤—ã–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –≤–æ–∑–Ω–∏–∫–∞—é—Ç –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –±–æ—Ç–æ–º.
    
    –¢—É—Ç –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å —Ä–µ–∂–∏–º:''', reply_markup=keyboard)


@dp.message(F.text.lower() == view_post.lower())
async def view_mode(message: types.Message):
    cid = message.chat.id
    if cid in EDITORS:
        EDITORS.remove(cid)
    await message.answer("–í—ã –≤–æ—à–ª–∏ –≤ —Ä–µ–∂–∏–º –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ /commands —á—Ç–æ–±—ã –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–º –∫–æ–º–∞–Ω–¥—ã",
                         reply_markup=types.ReplyKeyboardRemove())


@dp.message(F.text.lower() == edit_post.lower())
async def edit_mode(message: types.Message):
    cid = message.chat.id
    if cid not in EDITORS:
        EDITORS.append(cid)
    await message.answer("–í—ã –≤–æ—à–ª–∏ –≤ —Ä–µ–∂–∏–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ /commands —á—Ç–æ–±—ã –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–º "
                         "–∫–æ–º–∞–Ω–¥—ã", reply_markup=types.ReplyKeyboardRemove())


@dp.message(F.text.lower() == see_post.lower())
async def upload_photo_post(message: Message):
    buttons = [
        [types.InlineKeyboardButton(text="Panda", url='https://www.youtube.com/watch?v=hAOoMtRstJ8', callback_data="default_panda")]
    ]
    keyboard = types.InlineKeyboardMarkup(inline_keyboard=buttons)

    photo = types.FSInputFile('./resources/default.jpg')
    await message.answer(text='–í–∞—à –ø–æ—Å—Ç –≤—ã–≥–ª—è–¥–∏—Ç —Ç–∞–∫:')
    await bot.send_photo(message.chat.id, photo, reply_markup=keyboard)



async def main():
    logging.basicConfig(level=logging.INFO, format='%(asctime)s - [%(levelname)s] - %(name)s'
                                                   '(%(filename)s).%(funcName)s(%(lineno)d) - %(message)s')
    # db.create_tables()
    try:
        await dp.start_polling(bot)
    finally:
        await bot.session.close()


if __name__ == "__main__":
    asyncio.run(main())
